services:
  mysql:
    container_name: mysql
    image: mysql:8.4.4
    environment:
      MYSQL_USER: restadmin
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: restdb
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    expose:
      - "3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "restadmin", "-ppassword" ]
      interval: 10s
      timeout: 5s
      retries: 5
      
  mongo:
    container_name: mongo
    image: mongo:8.0.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - "27017:27017"
    expose: 
      - 27017
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
      
  auth-server:
    container_name: auth-server
    image: domboeckli/spring-6-auth-server:0.0.3-SNAPSHOT
    ports:
      - "9000:9000"
    expose:
      - 9000
    environment:
      SPRING_SECURITY_OAUTH2_AUTHORIZATION_SERVER_ISSUER: "http://host.docker.internal:9000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  rest-mvc:
    container_name: rest-mvc
    image: domboeckli/spring-6-rest-mvc:0.0.3-SNAPSHOT
    ports:
      - "8081:8081"
    expose:
      - 8081
    environment:
      SPRING_PROFILES_ACTIVE: localmysql
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://host.docker.internal:9000
      SERVER_PORT: 8081
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/restdb
      LOGGING_LEVEL_ORG_APACHE_KAFKA_CLIENTS_NETWORKCLIENT: ERROR
    depends_on:
      mysql:
        condition: service_healthy
        required: true
      auth-server:
        condition: service_started
        required: true
    extra_hosts:
      - "host.docker.internal:host-gateway"    
      
  reactive-mongo:
    container_name: reactive-mongo
    image: domboeckli/spring-6-reactive-mongo:0.0.1-SNAPSHOT
    ports:
      - "8083:8083"
    expose:
      - 8083
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://host.docker.internal:9000
      SERVER_PORT: 8083
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/sfg
      SPRING_DATA_MONGODB_USERNAME: root
      SPRING_DATA_MONGODB_PASSWORD: secret
    depends_on:
      mongo:
        condition: service_healthy
        required: true
      auth-server:
        condition: service_started
        required: true
    extra_hosts:
      - "host.docker.internal:host-gateway"      

  reactive:
    container_name: reactive
    image: domboeckli/spring-6-reactive:0.0.1-SNAPSHOT
    ports:
      - "8082:8082"
    expose:
      - 8082
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://host.docker.internal:9000
      SERVER_PORT: 8082
    depends_on:
      auth-server:
        condition: service_started
        required: true
    extra_hosts:
      - "host.docker.internal:host-gateway"    
        
  busybox:
    image: busybox:1.37.0
    container_name: busybox
    depends_on:
      auth-server:
        condition: service_started
        required: true
      rest-mvc:
        condition: service_started
        required: true
      reactive-mongo:
        condition: service_started
        required: true
      reactive:
        condition: service_started
        required: true  
    healthcheck:
      test: [ "CMD", "sh", "-c", "
            echo 'Checking BusyBox readiness...' &&
            test -f /bin/sh &&
            wget -qO- http://auth-server:9000/actuator/health/readiness | grep -q '\"status\":\"UP\"' &&
            wget -qO- http://rest-mvc:8081/actuator/health/readiness | grep -q '\"status\":\"UP\"' &&
            wget -qO- http://reactive-mongo:8083/actuator/health/readiness | grep -q '\"status\":\"UP\"' &&
            wget -qO- http://reactive:8082/actuator/health/readiness | grep -q '\"status\":\"UP\"'
          " ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      /bin/sh -c '
      while true; do
        auth_health=$$(wget -q -O - http://auth-server:9000/actuator/health/readiness 2>/dev/null)
        mvc_health=$$(wget -q -O - http://rest-mvc:8081/actuator/health/readiness 2>/dev/null)
        reactive_mongo_health=$$(wget -q -O - http://reactive-mongo:8083/actuator/health/readiness 2>/dev/null)
        reactive_health=$$(wget -q -O - http://reactive:8082/actuator/health/readiness 2>/dev/null)

        echo "{
          \"timestamp\": \"$$(date -Iseconds)\",
          \"services\": {
            \"auth-server\": $$auth_health,
            \"rest-mvc\": $$mvc_health,
            \"reactive-mongo\": $$reactive_mongo_health,
            \"reactive\": $$reactive_health
          }
        }"
        sleep 15
      done
      '            
